{
    "type": [
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        2
    ],
    "data": [
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "+ ",
        "            c(\"Persistence\", pers)",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "+ ",
        "          ),",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "+ ",
        ")",
        "Error in .stargazer.wrap(..., type = type, title = title, style = style,  : \n  argument is missing, with no default\n",
        "> ",
        "models <- c(model1, model2, model3, model4, model5, model6, model7, model8)",
        "There were 16 warnings (use warnings() to see them)",
        "\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "> ",
        "",
        "> ",
        "stargazer::stargazer(",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "+ ",
        "          models, ",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "+ ",
        "          type = \"text\", ",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "+ ",
        "          title = \"Channels\", ",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "+ ",
        "          dep.var.labels = c(",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "+ ",
        "              \"Log Investment\", \"Log TFP\", \"Index Economic Reforms\", ",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "+ ",
        "              \"Log Trade Share\", \"Log Primary Enrollment\", \"Log Secondary Enrollment\", ",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "+ ",
        "              \"Log Child Mortality\", \"Dummy Unrest\"",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "+ ",
        "              ), ",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "+ ",
        "          omit.stat = c(\"f\", \"ser\", \"rsq\", \"adj.rsq\"),",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "+ ",
        "          keep = \"dem\",",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "+ ",
        "          keep.stat = \"N\",",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "+ ",
        "          add.lines = list(",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "+ ",
        "            c(\"Long Run Effect\", lre),",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "+ ",
        "            c(\"Persistence\", pers)",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "+ ",
        "          )",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "+ ",
        ")",
        "Error: $ operator is invalid for atomic vectors\n",
        "\nRestarting R session...\n\n"
    ]
}