{
    "type": [
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        3,
        0,
        1,
        3,
        2
    ],
    "data": [
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "+ ",
        "          type = \"html\",",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "+ ",
        "          keep = c(\"dem\"),",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "+ ",
        "          column.labels = c(\"1 Lag\", \"4 Lags\", \"Soviet Dummies\", \"Regional Trends\"),",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "+ ",
        "          dep.var.labels = \"Dependent Variable\",",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "+ ",
        "          covariate.labels = c(\"Democracy\"),",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "+ ",
        "          omit.stat = c(\"ser\", \"rsq\", \"adj.rsq\", \"f\"),",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "+ ",
        "          add.lines = list( # add lines for persistence, long run effect and effect after 25 years",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "+ ",
        "            c(\"Persistence: \", pers),",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "+ ",
        "            c(\"Long run effect: \", lre),",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "+ ",
        "            c(\"Effect after 25 years: \", sre)",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "+ ",
        "            )",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "+ ",
        "          )",
        "\n<table style=\"text-align:center\"><tr><td colspan=\"5\" style=\"border-bottom: 1px solid black\"></td></tr><tr><td style=\"text-align:left\"></td><td colspan=\"4\"><em>Dependent variable:</em></td></tr>\n<tr><td></td><td colspan=\"4\" style=\"border-bottom: 1px solid black\"></td></tr>\n<tr><td style=\"text-align:left\"></td><td colspan=\"4\">Dependent Variable</td></tr>\n<tr><td style=\"text-align:left\"></td><td>1 Lag</td><td>4 Lags</td><td>Soviet Dummies</td><td>Regional Trends</td></tr>\n<tr><td style=\"text-align:left\"></td>",
        "<td>(1)</td><td>(2)</td><td>(3)</td><td>(4)</td></tr>\n<tr><td colspan=\"5\" style=\"border-bottom: 1px solid black\"></td></tr><tr><td style=\"text-align:left\">Democracy</td><td>0.966</td><td>1.149<sup>*</sup></td><td>1.292<sup>*</sup></td><td>1.697<sup>**</sup></td></tr>\n<tr><td style=\"text-align:left\"></td><td>(0.615)</td><td>(0.607)</td><td>(0.675)</td><td>(0.785)</td></tr>\n<tr><td style=\"text-align:left\"></td><td></td><td></td><td></td><td></td></tr>\n<tr><td colspan=\"5\" style=\"border-bottom: 1px solid black\"></td></tr>",
        "<tr><td style=\"text-align:left\">Persistence:</td><td>0.963</td><td>0.964</td><td>0.964</td><td>0.954</td></tr>\n<tr><td style=\"text-align:left\">Long run effect:</td><td>26.315</td><td>31.521</td><td>35.723</td><td>36.788</td></tr>\n<tr><td style=\"text-align:left\">Effect after 25 years:</td><td>20.836</td><td>24.866</td><td>27.929</td><td>32.051</td></tr>\n<tr><td style=\"text-align:left\">Observations</td><td>6,312</td><td>6,309</td><td>6,309</td><td>6,309</td></tr>\n<tr><td colspan=\"5\" style=\"border-bottom: 1px solid black\"></td></tr>",
        "<tr><td style=\"text-align:left\"><em>Note:</em></td><td colspan=\"4\" style=\"text-align:right\"><sup>*</sup>p<0.1; <sup>**</sup>p<0.05; <sup>***</sup>p<0.01</td></tr>\n</table>\n",
        "> ",
        "#| output: asis",
        "Warning messages:\n",
        "1: ",
        "In if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "2: ",
        "In if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "3: ",
        "In if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "4: ",
        "In if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "> ",
        "models <- c(iv_model_1, iv_model_2, iv_model_3, iv_model_4)",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "> ",
        "",
        "> ",
        "stargazer(models, ",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "+ ",
        "          type = \"html\",",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "+ ",
        "          keep = c(\"dem\"),",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "+ ",
        "          column.labels = c(\"1 Lag\", \"4 Lags\", \"Soviet Dummies\", \"Regional Trends\"),",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "+ ",
        "          dep.var.labels = \"Dependent Variable\",",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "+ ",
        "          covariate.labels = c(\"Democracy\"),",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "+ ",
        "          omit.stat = c(\"ser\", \"rsq\", \"adj.rsq\", \"f\"),",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "+ ",
        "          add.lines = list( # add lines for persistence, long run effect and effect after 25 years",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "+ ",
        "            c(\"Persistence: \", pers),",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "+ ",
        "            c(\"Long run effect: \", lre),",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "+ ",
        "            c(\"Effect after 25 years: \", sre)",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "+ ",
        "            )",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "+ ",
        "          )",
        "Error: $ operator is invalid for atomic vectors\n",
        "> ",
        "#| output: asis",
        "Warning messages:\n",
        "1: ",
        "In if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "2: ",
        "In if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "3: ",
        "In if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "4: ",
        "In if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "5: ",
        "In if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "6: ",
        "In if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "7: ",
        "In if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "8: ",
        "In if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "> ",
        "models <- c(iv_model_1, iv_model_2, iv_model_3, iv_model_4)",
        "> ",
        "#| output: asis",
        "Warning messages:\n",
        "1: ",
        "In if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "2: ",
        "In if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "3: ",
        "In if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "4: ",
        "In if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "5: ",
        "In if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "6: ",
        "In if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "7: ",
        "In if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "8: ",
        "In if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "> ",
        "models <- c(iv_model_1, iv_model_2, iv_model_3, iv_model_4)",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "> ",
        "",
        "> ",
        "stargazer(models, ",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "+ ",
        "          type = \"html\",",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "+ ",
        "          keep = c(\"dem\"),",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "+ ",
        "          column.labels = c(\"1 Lag\", \"4 Lags\", \"Soviet Dummies\", \"Regional Trends\"),",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "+ ",
        "          dep.var.labels = \"Dependent Variable\",",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "+ ",
        "          covariate.labels = c(\"Democracy\"),",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "+ ",
        "          omit.stat = c(\"ser\", \"rsq\", \"adj.rsq\", \"f\"),",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "+ ",
        "          add.lines = list( # add lines for persistence, long run effect and effect after 25 years",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "+ ",
        "            c(\"Persistence: \", pers),",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "+ ",
        "            c(\"Long run effect: \", lre),",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "+ ",
        "            c(\"Effect after 25 years: \", sre)",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "+ ",
        "            )",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "Warning in if (n >= 10000L) return(TRUE) :",
        "\n ",
        " the condition has length > 1 and only the first element will be used\n",
        "+ ",
        "          )",
        "Error: $ operator is invalid for atomic vectors\n",
        "\nRestarting R session...\n\n"
    ]
}